{"ast":null,"code":"var _jsxFileName = \"C:\\\\Arpan\\\\Project\\\\Sample\\\\student-network-frontend\\\\src\\\\components\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Card, ListGroup, Form, Button, Container } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n\n  // Fetch messages\n  useEffect(() => {\n    axios.get('http://127.0.0.1:8000/api/messages/').then(res => setMessages(res.data)).catch(err => console.error(err));\n  }, []);\n\n  // Send a new message\n  const handleSend = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    try {\n      await axios.post('http://127.0.0.1:8000/api/messages/', {\n        content: newMessage,\n        receiver: selectedUserId // Make sure this is set\n      }, {\n        withCredentials: true,\n        headers: {\n          'X-CSRFToken': getCSRFToken(),\n          'Content-Type': 'application/json'\n        }\n      });\n      setNewMessage('');\n      fetchMessages(); // Refresh messages\n    } catch (err) {\n      var _err$response;\n      console.error('Message send error:', (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-4\",\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: messages.map(msg => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [msg.sender.username, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), \" \", msg.content]\n          }, msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSend,\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3,\n          placeholder: \"Type your message...\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"mt-2\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Messages, \"ppYy//Iy9fHF0/R/fKleZlFUFyc=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useEffect","useState","axios","Card","ListGroup","Form","Button","Container","jsxDEV","_jsxDEV","Messages","_s","messages","setMessages","newMessage","setNewMessage","get","then","res","data","catch","err","console","error","handleSend","e","preventDefault","trim","post","content","receiver","selectedUserId","withCredentials","headers","getCSRFToken","fetchMessages","_err$response","response","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Body","map","msg","Item","sender","username","id","onSubmit","Group","Control","as","rows","placeholder","value","onChange","target","variant","type","_c","$RefreshReg$"],"sources":["C:/Arpan/Project/Sample/student-network-frontend/src/components/Messages.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, ListGroup, Form, Button, Container } from 'react-bootstrap';\r\n\r\nconst Messages = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  // Fetch messages\r\n  useEffect(() => {\r\n    axios.get('http://127.0.0.1:8000/api/messages/')\r\n      .then(res => setMessages(res.data))\r\n      .catch(err => console.error(err));\r\n  }, []);\r\n\r\n  // Send a new message\r\n  const handleSend = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim()) return;\r\n  \r\n    try {\r\n      await axios.post(\r\n        'http://127.0.0.1:8000/api/messages/',\r\n        {\r\n          content: newMessage,\r\n          receiver: selectedUserId // Make sure this is set\r\n        },\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            'X-CSRFToken': getCSRFToken(),\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n      );\r\n      setNewMessage('');\r\n      fetchMessages(); // Refresh messages\r\n    } catch (err) {\r\n      console.error('Message send error:', err.response?.data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1 className=\"my-4\">Messages</h1>\r\n      <Card>\r\n        <Card.Body>\r\n          <ListGroup>\r\n            {messages.map(msg => (\r\n              <ListGroup.Item key={msg.id}>\r\n                <strong>{msg.sender.username}:</strong> {msg.content}\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      <Form onSubmit={handleSend} className=\"mt-3\">\r\n        <Form.Group>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={3}\r\n            placeholder=\"Type your message...\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\" className=\"mt-2\">Send</Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Messages;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}