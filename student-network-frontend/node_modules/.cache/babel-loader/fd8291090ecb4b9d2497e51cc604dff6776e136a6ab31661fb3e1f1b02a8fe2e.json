{"ast":null,"code":"var _jsxFileName = \"C:\\\\Arpan\\\\Project\\\\Sample\\\\student-network-frontend\\\\src\\\\components\\\\Group.js\";\nimport React from 'react';\nimport { Card, Button, Container, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Group = () => {\n  const groups = [{\n    id: 1,\n    name: 'Web Developers',\n    description: 'A group for web developers.'\n  }, {\n    id: 2,\n    name: 'Data Scientists',\n    description: 'A group for data science enthusiasts.'\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-4\",\n      children: \"Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: groups.map(group => /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: group.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: group.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              children: \"Join Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)\n      }, group.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = Group;\nexport default Group;\nvar _c;\n$RefreshReg$(_c, \"Group\");","map":{"version":3,"names":["React","Card","Button","Container","Row","Col","jsxDEV","_jsxDEV","Group","groups","id","name","description","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","group","md","Body","Title","Text","variant","_c","$RefreshReg$"],"sources":["C:/Arpan/Project/Sample/student-network-frontend/src/components/Group.js"],"sourcesContent":["import React from 'react';\r\nimport { Card, Button, Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Group = () => {\r\n  const groups = [\r\n    { id: 1, name: 'Web Developers', description: 'A group for web developers.' },\r\n    { id: 2, name: 'Data Scientists', description: 'A group for data science enthusiasts.' },\r\n  ];\r\n\r\n  return (\r\n    <Container>\r\n      <h1 className=\"my-4\">Groups</h1>\r\n      <Row>\r\n        {groups.map(group => (\r\n          <Col key={group.id} md={4} className=\"mb-4\">\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title>{group.name}</Card.Title>\r\n                <Card.Text>{group.description}</Card.Text>\r\n                <Button variant=\"primary\">Join Group</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Group;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,MAAM,EAAEC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB,MAAMC,MAAM,GAAG,CACb;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,WAAW,EAAE;EAA8B,CAAC,EAC7E;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,WAAW,EAAE;EAAwC,CAAC,CACzF;EAED,oBACEL,OAAA,CAACJ,SAAS;IAAAU,QAAA,gBACRN,OAAA;MAAIO,SAAS,EAAC,MAAM;MAAAD,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCX,OAAA,CAACH,GAAG;MAAAS,QAAA,EACDJ,MAAM,CAACU,GAAG,CAACC,KAAK,iBACfb,OAAA,CAACF,GAAG;QAAgBgB,EAAE,EAAE,CAAE;QAACP,SAAS,EAAC,MAAM;QAAAD,QAAA,eACzCN,OAAA,CAACN,IAAI;UAAAY,QAAA,eACHN,OAAA,CAACN,IAAI,CAACqB,IAAI;YAAAT,QAAA,gBACRN,OAAA,CAACN,IAAI,CAACsB,KAAK;cAAAV,QAAA,EAAEO,KAAK,CAACT;YAAI;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eACrCX,OAAA,CAACN,IAAI,CAACuB,IAAI;cAAAX,QAAA,EAAEO,KAAK,CAACR;YAAW;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC1CX,OAAA,CAACL,MAAM;cAACuB,OAAO,EAAC,SAAS;cAAAZ,QAAA,EAAC;YAAU;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC,GAPCE,KAAK,CAACV,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACQ,EAAA,GAxBIlB,KAAK;AA0BX,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}