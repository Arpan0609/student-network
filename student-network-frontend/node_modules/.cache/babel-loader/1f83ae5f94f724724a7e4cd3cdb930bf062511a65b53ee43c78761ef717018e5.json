{"ast":null,"code":"var _jsxFileName = \"C:\\\\Arpan\\\\Project\\\\Sample\\\\student-network-frontend\\\\src\\\\components\\\\Groups.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, Button, Container, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Groups = () => {\n  _s();\n  const [groups, setGroups] = useState([{\n    id: 1,\n    name: 'Web Developers',\n    description: 'A group for web developers.',\n    members: 120\n  }, {\n    id: 2,\n    name: 'Data Scientists',\n    description: 'A group for data science enthusiasts.',\n    members: 85\n  }, {\n    id: 3,\n    name: 'AI Enthusiasts',\n    description: 'A group for AI and machine learning fans.',\n    members: 200\n  }]);\n  const handleJoinGroup = groupId => {\n    alert(`You joined the group: ${groups.find(group => group.id === groupId).name}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: groups.map(group => /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: group.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: group.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: [group.members, \" members\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => handleJoinGroup(group.id),\n              children: \"Join Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)\n      }, group.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Groups, \"fBlqhn8Pfu80vfuDjXPp3xDN/ls=\");\n_c = Groups;\nexport default Groups;\nvar _c;\n$RefreshReg$(_c, \"Groups\");","map":{"version":3,"names":["React","useState","Card","Button","Container","Row","Col","jsxDEV","_jsxDEV","Groups","_s","groups","setGroups","id","name","description","members","handleJoinGroup","groupId","alert","find","group","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","md","Body","Title","Text","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Arpan/Project/Sample/student-network-frontend/src/components/Groups.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, Button, Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Groups = () => {\r\n  const [groups, setGroups] = useState([\r\n    { id: 1, name: 'Web Developers', description: 'A group for web developers.', members: 120 },\r\n    { id: 2, name: 'Data Scientists', description: 'A group for data science enthusiasts.', members: 85 },\r\n    { id: 3, name: 'AI Enthusiasts', description: 'A group for AI and machine learning fans.', members: 200 },\r\n  ]);\r\n\r\n  const handleJoinGroup = (groupId) => {\r\n    alert(`You joined the group: ${groups.find(group => group.id === groupId).name}`);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"my-4\">\r\n      <h1>Groups</h1>\r\n      <Row>\r\n        {groups.map(group => (\r\n          <Col key={group.id} md={4} className=\"mb-4\">\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title>{group.name}</Card.Title>\r\n                <Card.Text>{group.description}</Card.Text>\r\n                <Card.Text>\r\n                  <small className=\"text-muted\">{group.members} members</small>\r\n                </Card.Text>\r\n                <Button variant=\"primary\" onClick={() => handleJoinGroup(group.id)}>\r\n                  Join Group\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Groups;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,MAAM,EAAEC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CACnC;IAAEY,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,WAAW,EAAE,6BAA6B;IAAEC,OAAO,EAAE;EAAI,CAAC,EAC3F;IAAEH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,WAAW,EAAE,uCAAuC;IAAEC,OAAO,EAAE;EAAG,CAAC,EACrG;IAAEH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,WAAW,EAAE,2CAA2C;IAAEC,OAAO,EAAE;EAAI,CAAC,CAC1G,CAAC;EAEF,MAAMC,eAAe,GAAIC,OAAO,IAAK;IACnCC,KAAK,CAAC,yBAAyBR,MAAM,CAACS,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACR,EAAE,KAAKK,OAAO,CAAC,CAACJ,IAAI,EAAE,CAAC;EACnF,CAAC;EAED,oBACEN,OAAA,CAACJ,SAAS;IAACkB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACzBf,OAAA;MAAAe,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfnB,OAAA,CAACH,GAAG;MAAAkB,QAAA,EACDZ,MAAM,CAACiB,GAAG,CAACP,KAAK,iBACfb,OAAA,CAACF,GAAG;QAAgBuB,EAAE,EAAE,CAAE;QAACP,SAAS,EAAC,MAAM;QAAAC,QAAA,eACzCf,OAAA,CAACN,IAAI;UAAAqB,QAAA,eACHf,OAAA,CAACN,IAAI,CAAC4B,IAAI;YAAAP,QAAA,gBACRf,OAAA,CAACN,IAAI,CAAC6B,KAAK;cAAAR,QAAA,EAAEF,KAAK,CAACP;YAAI;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eACrCnB,OAAA,CAACN,IAAI,CAAC8B,IAAI;cAAAT,QAAA,EAAEF,KAAK,CAACN;YAAW;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC1CnB,OAAA,CAACN,IAAI,CAAC8B,IAAI;cAAAT,QAAA,eACRf,OAAA;gBAAOc,SAAS,EAAC,YAAY;gBAAAC,QAAA,GAAEF,KAAK,CAACL,OAAO,EAAC,UAAQ;cAAA;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpD,CAAC,eACZnB,OAAA,CAACL,MAAM;cAAC8B,OAAO,EAAC,SAAS;cAACC,OAAO,EAAEA,CAAA,KAAMjB,eAAe,CAACI,KAAK,CAACR,EAAE,CAAE;cAAAU,QAAA,EAAC;YAEpE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC,GAZCN,KAAK,CAACR,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAab,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACjB,EAAA,CAlCID,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAoCZ,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}